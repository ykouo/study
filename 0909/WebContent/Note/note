[ 고급 웹 프로그래밍 ] 
	▸ 리스너 
	▸ 필터 
		⇒ 프레임워크에서 기본적으로 제공되는 경우 多
			Spring
==========================================================================
[리스너]	
	▸ 웹 환경에서 발생하는 특정 이벤트 상황을 모니터링 하다가 실행되는 특수한 형태의 서블릿 
		⇒ 특정 이벤트에 따라 실행되는 인터페이스를 구현하는 클래스 
		@WebListner 
	▸ 리스너를 주로 언제쓸까? DB대신으로 사용
		⇒  웹 어플리케이션에 초기 데이터를 공급 
		⇒ 특정 상황에 따라 자동으로 동작하는 프로그램을 구현 
		ex) 세션 장바구니에 물품을 추가하면 자동으로 계산 
		"초기화매개변수"	
	[초기화 매개변수] 
		▸ 웹 어플리케이션 외부에서 웹 어플리케이션이 구동될때 로딩시킬수있는 정보 
		▸ 별도의 설정을 하는 이유 : 웹 어플리케이션 전반에서 공통적으로 사용하는 목적으로 설정
			⇒ ★★★★★★ 높은 응집도 ★★★★★
		▸ 일반적으로 프로그램을 동작시킬때 필요한 기본정보는, 
		     소스코드내에 "하드코딩" 하지 않고 별도의 환경설정 파일을 통해 제공한다.
			⇒ 보통 web.xml에서 설정하는 경우가 많음
			
		▸ "control.jsp" ◀--- ① .java 
							 ②  응집도 낮음 ---▶ 높여야됨!
	
==========================================================================
[필터]	
	▸ 특수한 기능을 수행하는 서블릿 
		ex) 정수기 필터 
		사용자의 요청을 처리하기 전에 req, res 객체들을 가로채 사전에 필터에 정의된 기능을 수행한후 , 
		원래 요청을 처리해줌 
		--> 국제화(다국어처리)
	▸
	▸
	